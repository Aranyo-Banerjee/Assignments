using System.Buffers;

namespace LitwareLib
{
    [Serializable]
    public class Employee : IPrintable
    {
        public int EmpNo { get; set; }
        public string EmpName { get; set; }
        public double Salary { get; set; }
        public double HRA { get; set; }
        public double TA { get; set; }
        public double DA { get; set; }
        public double PF { get; set; }
        public double TDS { get; set; }
        public double NetSalary { get; set; }
        public double GrossSalary { get; set; }
        public Employee(int _empNo, string _empName, double _salary)
        {
            this.EmpNo = _empNo;
            this.EmpName = _empName;
            this.Salary = _salary;
        }
        public double GetGrossSalary()
        {
            if (Salary < 5000)
            {
                HRA = (0.1) * Salary;
                TA = (0.05) * Salary;
                DA = (0.15) * Salary;
            }
            else if (Salary < 10000)
            {
                HRA = (0.15) * Salary;
                TA = (0.1) * Salary;
                DA = (0.2) * Salary;
            }
            else if (Salary < 15000)
            {
                HRA = (0.2) * Salary;
                TA = (0.15) * Salary;
                DA = (0.25) * Salary;
            }
            else if (Salary < 20000)
            {
                HRA = (0.25) * Salary;
                TA = (0.2) * Salary;
                DA = (0.3) * Salary;
            }
            else
            {
                HRA = (0.3) * Salary;
                TA = (0.25) * Salary;
                DA = (0.35) * Salary;
            }
            GrossSalary = Salary + HRA + TA + DA;
            return GrossSalary;
        }
        public virtual double CalculateSalary()
        {
            GrossSalary = GetGrossSalary();
            PF = (0.1) * GrossSalary;
            TDS = (0.18) * GrossSalary;
            NetSalary = GrossSalary - (PF + TDS);
            return NetSalary;
        }
        public void PrintDetails()
        {
            Console.WriteLine();
            Console.WriteLine("Manager Name : {0}", EmpName);
            Console.WriteLine("Manager ID : {0}", EmpNo);
            Console.WriteLine("Gross Salary : {0}", GrossSalary);
            Console.WriteLine("Net Salary : {0}", NetSalary);
            Console.WriteLine();
        }
    }

    [Serializable]
    public class Manager : Employee
    {
        double PetrolAllowance { get; set; }
        double FoodAllowance { get; set; }
        double OtherAllowance { get; set; }
        public Manager(int _empNo, string _empName, double _salary) : base(_empNo, _empName, _salary)
        {
            PetrolAllowance = (0.08) * _salary;
            FoodAllowance = (0.13) * _salary;
            OtherAllowance = (0.03) * _salary;
        }
        public override double CalculateSalary()
        {
            GrossSalary = base.GetGrossSalary();
            GrossSalary = GrossSalary + PetrolAllowance + FoodAllowance + OtherAllowance;
            PF = (0.1) * GrossSalary;
            TDS = (0.18) * GrossSalary;
            NetSalary = GrossSalary - (PF + TDS);
            return NetSalary;
        }
    }

    [Serializable]
    public class MarketingExecutive : Employee
    {
        double KilometerTravel { get; set; }
        double TourAllowance { get; set; }
        double TelephoneAllowance { get; set; }
        public MarketingExecutive(int _empNo, string _empName, double _salary, int _kmTravel) : base(_empNo, _empName, _salary)
        {
            KilometerTravel = _kmTravel;
            TourAllowance = 5 * KilometerTravel;
            TelephoneAllowance = 1000;
        }
        public override double CalculateSalary()
        {
            GrossSalary = base.GetGrossSalary();
            GrossSalary = GrossSalary + TourAllowance + TelephoneAllowance;
            PF = (0.1) * GrossSalary;
            TDS = (0.18) * GrossSalary;
            NetSalary = GrossSalary - (PF + TDS);
            return NetSalary;
        }
    }
    public interface IPrintable
    {
        public void PrintDetails();
    }
}